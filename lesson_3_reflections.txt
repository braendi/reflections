When would you want to use a remote repository rather than keeping all your work local?
- when i want to share it with other developers

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- because - if the remote is public - anyone could commit something on the remote, and i want decide myself, what to include

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- a clone is a copy of a git repository, a fork is the same - but on GitHub, a branch is a label on objects in a git repository
- i use clones, when i want to work on a copy of an other persons repository without the need to merge back on it
- i use forks, when the source repository is on GitHub
- i use branches, when i don't want to influence other developers working on the same project, but still want to check-in my work 

What is the benefit of having a copy of the last known state of the remote stored locally?
- i can merge 'offline', the risk of merge conflicts is lower, the 'nearer' i am at the state of the remote

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- i would have to send my merge requests by mail and/or using a shared folder
- easier: i would not have to install git and to register at github
- harder: everything else, i guess

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
- see lesson 2